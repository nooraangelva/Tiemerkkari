<?xml version="1.0" encoding="utf-8"?>

<layout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools">

    <data>
        <variable
            name="viewModel"
            type="com.example.android.navigation.screens.sign_options.SignOptionsViewModel" />
    </data>

    <!-- two_pane.xml -->
    <androidx.slidingpanelayout.widget.SlidingPaneLayout
        android:id="@+id/sliding_pane_layout"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        tools:context="com.example.android.navigation.SignOptionsFragment">

        <!-- The first child view becomes the left pane. When the combined
             desired width (expressed using android:layout_width) would
             not fit on-screen at once, the right pane is permitted to
             overlap the left. -->
        <androidx.recyclerview.widget.RecyclerView
            android:id="@+id/list_panel"
            android:layout_width="280dp"
            android:layout_height="match_parent"
            android:layout_gravity="start"/>

        <!-- The second child becomes the right (content) pane. In this
             example, android:layout_weight is used to expand this detail pane
             to consume leftover available space when the
             the entire window is wide enough to fit both the left and right pane.-->
        <androidx.fragment.app.FragmentContainerView
            android:id="@+id/detail_container"
            android:layout_width="300dp"
            android:layout_weight="1"
            android:layout_height="match_parent"
            android:background="#ff333333"
            android:name="com.example.SelectAnItemFragment" />
    </androidx.slidingpanelayout.widget.SlidingPaneLayout>
</layout>